name: TinyLlama CI

on:
  push:
    branches: [ "**" ]
  pull_request: {}

env:
  AWS_REGION: eu-central-1
  AWS_DEFAULT_REGION: eu-central-1

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions: { id-token: write, contents: read }


    steps:
    - uses: actions/checkout@v4

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: "1.8.5"


    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install dev deps
      run: pip install -r requirements.txt

    - name: Build shared_deps layer zip
      working-directory: 01_src/lambda_layers/shared_deps
      run: python build_layer_ci.py

    - name: Build router.zip
      run: python tools.py lambda-package


    - name: Set required env vars for pytest
      run: |
        echo 'COGNITO_USER_POOL_ID=eu-central-1_TEST'    >> "${GITHUB_ENV}"
        echo 'COGNITO_CLIENT_ID=local-test-client-id'    >> "${GITHUB_ENV}"
        echo 'AWS_ACCESS_KEY_ID=test'                     >> "${GITHUB_ENV}"
        echo 'AWS_SECRET_ACCESS_KEY=test'                 >> "${GITHUB_ENV}"
        echo 'AWS_SESSION_TOKEN=test'                     >> "${GITHUB_ENV}"


    - name: Run tests
      run: pytest -q

    - name: Configure AWS creds (OIDC)
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::108782059508:role/tlfif-github-actions-deployer
        aws-region: ${{ env.AWS_REGION }}

    - name: Load variables from .env_public
      run: |
        set -a
        source .env_public
        set +a
        echo "TF_VAR_env=$TLFIF_ENV" >> $GITHUB_ENV
        echo "TF_VAR_artifact_bucket=$ARTIFACT_BUCKET" >> $GITHUB_ENV
      shell: bash

    - name: Terraform apply
      run: python tools.py tf-apply
